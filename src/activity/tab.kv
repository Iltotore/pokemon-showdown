#:kivy 2.0.0
#:import Clock kivy.clock.Clock
#:import fit graphics.fit
#:import fit_text graphics.fit_text
#:import json json
#:import center_pos graphics.center_pos
#:import ShowdownScreen main.ShowdownScreen
#:import MDFlatButton kivymd.uix.button.MDFlatButton
#:import FilterDD graphics.widget.FilterDD
#:import session api.data.session

<FDDButton>:
    size_hint_y: None
    height: '50sp'

<MDFlatButton>
    md_bg_color: app.theme_cls.primary_color
    color: 1, 1, 1
    radius: 0,

<DashboardScreen@ShowdownScreen>:

    tiers: tiers.__self__

    on_receiving_formats:
        formats = list(filter(session.Format.is_visible, args[1].formats))
        tiers.entries = [f.name for f in formats]
        tier.text = "Tier: " + formats[0].name

    on_receiving_updatesearch:
        d = json.loads(args[2][0])
        play.text = "Battle !" if d["games"] is None else "Searching"

    RelativeLayout:
        Image:
            allow_stretch: True
            keep_ratio: True
            source: "background/charizard.jpg"
            size_hint: None, None
            size: fit(self.texture.size, self.parent.size)
            pos: center_pos(self.size, self.parent.size)

        BoxLayout:
            size_hint: 0.4, 0.075
            orientation: "horizontal"
            pos: center_pos(self.size, self.parent.size, hint=(0.5, 0.1))

            MDFlatButton:
                id: play
                text: "Battle !"
                size_hint: 0.5, 1
                font_size: fit_text(self.size, len(self.text))
                on_press:
                    app.web_app.find_battle()

            MDFlatButton:
                id: tier
                text: "Loading tier"
                size_hint: 0.5, 1
                allow_stretch: True
                font_size: fit_text(self.size, len(self.text))
                md_bg_color: app.theme_cls.primary_dark

                on_press:
                    tiers.open(self)
                    Clock.schedule_once(lambda x: setattr(tiers.input_area, "focus", True), 0.2)

                FilterDD:
                    id: tiers
                    on_item_select:
                        app.web_app.select_format(args[1])
                        tier.text = "Tier: " + args[1]
                        args[0].dismiss()